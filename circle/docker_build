#!/bin/bash
set -eu

NV=3.9


CIRCLE_BRANCH=${CIRCLE_BRANCH/\//-} # fix/sth => fix-sth
tagName=(${CIRCLE_BRANCH/-/ }) # release-1 => release
SUFFIX="-beta"
if [ $tagName == "release" ]; then
  SUFFIX=""
fi

parentVersion="beta"
if [ $tagName == "release" ]; then
  parentVersion="latest"
fi

minorv=$(echo $NV | sed "s/\(.*\)\.\(.*\)\..*/\1.\2/")
echo "Setting build-arg v=${minorv}"

imageName=$CONTAINER_NAME:v$minorv$SUFFIX # tagging up to minor version while building

ptag=${NV/#2*/} # for v2: ptag=""
if [ -n "$ptag" ]; then
  ptag=${ptag:+3} # for v3 ptag=3
fi

baseDF="Dockerfile"

echo "Configuring FROM and ENTRYPOINT in Dockerfile with base=sandbox:${parentVersion} and t=python${ptag}"
sed "s/^\(FROM quay.io\/redsift\/sandbox:\).*$/\1${parentVersion}/;s/ENTRYPOINT \[\"\/usr\/bin\/python/&${ptag}/" < $baseDF > Dockerfile.versioned

echo Building $imageName
docker build --build-arg v=$minorv --build-arg t="${ptag}" -t $imageName -f Dockerfile.versioned .

PV=$(docker run -u 7438:7438 -t $imageName --version | tr -d '\r' | tr -d '+')
V=${PV/Python /}
echo "Container report version: ${V}"

FV_TAG=$CONTAINER_NAME:v$V$SUFFIX
echo "Tagging as $FV_TAG"
docker tag $imageName $FV_TAG

MAJOR_VERSION=(${NV//./ })
MV_TAG=$CONTAINER_NAME:v$MAJOR_VERSION$SUFFIX
echo "Tagging as $MV_TAG"
docker tag $imageName $MV_TAG

if [[ "$tagName" == "release" ]]; then
  echo "Tagging as $CONTAINER_NAME:latest"
  docker tag $imageName $CONTAINER_NAME:latest
fi
